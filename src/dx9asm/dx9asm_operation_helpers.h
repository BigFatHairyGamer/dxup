#pragma once

#include "dx9asm_meta.h"

namespace dxapex {

  namespace dx9asm {

    const uint32_t noSwizzle = ENCODE_D3D10_SB_OPERAND_4_COMPONENT_SELECTION_MODE(D3D10_SB_OPERAND_4_COMPONENT_SWIZZLE_MODE) | D3D10_SB_OPERAND_4_COMPONENT_NOSWIZZLE;
    const uint32_t writeAll = ENCODE_D3D10_SB_OPERAND_4_COMPONENT_SELECTION_MODE(D3D10_SB_OPERAND_4_COMPONENT_MASK_MODE) | ENCODE_D3D10_SB_OPERAND_4_COMPONENT_MASK(D3D10_SB_OPERAND_4_COMPONENT_MASK_ALL);

    inline uint32_t encodeVectorMasked(uint32_t type, uint32_t dimension, uint32_t mask,
      uint32_t rep0 = D3D10_SB_OPERAND_INDEX_IMMEDIATE32, uint32_t rep1 = D3D10_SB_OPERAND_INDEX_IMMEDIATE32, uint32_t rep2 = D3D10_SB_OPERAND_INDEX_IMMEDIATE32) {
      return  ENCODE_D3D10_SB_OPERAND_TYPE(type) |
              ENCODE_D3D10_SB_OPERAND_NUM_COMPONENTS(D3D10_SB_OPERAND_4_COMPONENT) |
              ENCODE_D3D10_SB_OPERAND_4_COMPONENT_SELECTION_MODE(D3D10_SB_OPERAND_4_COMPONENT_MASK_MODE) |
              ENCODE_D3D10_SB_OPERAND_4_COMPONENT_MASK(mask) |
              ENCODE_D3D10_SB_OPERAND_INDEX_DIMENSION(dimension) |
              ENCODE_D3D10_SB_OPERAND_INDEX_REPRESENTATION(0, rep0) |
              ENCODE_D3D10_SB_OPERAND_INDEX_REPRESENTATION(1, rep1) |
              ENCODE_D3D10_SB_OPERAND_INDEX_REPRESENTATION(2, rep2);
    }

    inline uint32_t encodeVectorSwizzled(uint32_t type, uint32_t dimension, uint32_t swX, uint32_t swY, uint32_t swZ, uint32_t swW,
      uint32_t rep0 = D3D10_SB_OPERAND_INDEX_IMMEDIATE32, uint32_t rep1 = D3D10_SB_OPERAND_INDEX_IMMEDIATE32, uint32_t rep2 = D3D10_SB_OPERAND_INDEX_IMMEDIATE32) {
      return  ENCODE_D3D10_SB_OPERAND_TYPE(type) |
              ENCODE_D3D10_SB_OPERAND_NUM_COMPONENTS(D3D10_SB_OPERAND_4_COMPONENT) |
              ENCODE_D3D10_SB_OPERAND_4_COMPONENT_SELECTION_MODE(D3D10_SB_OPERAND_4_COMPONENT_SWIZZLE_MODE) |
              ENCODE_D3D10_SB_OPERAND_4_COMPONENT_SWIZZLE(swX, swY, swZ, swW) |
              ENCODE_D3D10_SB_OPERAND_INDEX_DIMENSION(dimension) |
              ENCODE_D3D10_SB_OPERAND_INDEX_REPRESENTATION(0, rep0) |
              ENCODE_D3D10_SB_OPERAND_INDEX_REPRESENTATION(1, rep1) |
              ENCODE_D3D10_SB_OPERAND_INDEX_REPRESENTATION(2, rep2);
    }

    inline uint32_t encodeVector(uint32_t type, uint32_t dimension,
      uint32_t rep0 = D3D10_SB_OPERAND_INDEX_IMMEDIATE32, uint32_t rep1 = D3D10_SB_OPERAND_INDEX_IMMEDIATE32, uint32_t rep2 = D3D10_SB_OPERAND_INDEX_IMMEDIATE32) {
      return  ENCODE_D3D10_SB_OPERAND_TYPE(type) |
        ENCODE_D3D10_SB_OPERAND_NUM_COMPONENTS(D3D10_SB_OPERAND_4_COMPONENT) |
        noSwizzle |
        ENCODE_D3D10_SB_OPERAND_INDEX_DIMENSION(dimension) |
        ENCODE_D3D10_SB_OPERAND_INDEX_REPRESENTATION(0, rep0) |
        ENCODE_D3D10_SB_OPERAND_INDEX_REPRESENTATION(1, rep1) |
        ENCODE_D3D10_SB_OPERAND_INDEX_REPRESENTATION(2, rep2);
    }

  }

}